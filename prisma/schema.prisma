// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Store {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  userId    String
  categories Category[] @relation("StoreToCategory")
  billboards Billboard[] @relation("StoreToBillboard")
  sizes      Size[] @relation("StoreToSize")
  colors      Color[] @relation("StoreToColor")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String?
  email        String   @unique
  access_token String?
  pinture      String?
  provider     String?
  Post Post[]
}

model Post {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  slug  String @unique
  title String @default("Sin nombre")
  body  String @default("")
  tags  String @default("")
  cover String?

  author User @relation(fields: [userId], references: [id])

  published Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String    @db.ObjectId
} 

model Billboard {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  storeId     String   @db.ObjectId
  store       Store    @relation("StoreToBillboard", fields: [storeId], references: [id])
  label       String
  imageUrl    String
  categories  Category[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([storeId])
}

model Category {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  storeId      String     @db.ObjectId
  store        Store      @relation("StoreToCategory", fields: [storeId], references: [id])
  billboardId  String     @db.ObjectId
  billboard    Billboard  @relation(fields: [billboardId], references: [id])
  name         String 
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([storeId])
  @@index([billboardId])
}

model Size {
    id           String     @id @default(auto()) @map("_id") @db.ObjectId
    storeId String @db.ObjectId
    store Store @relation("StoreToSize",fields: [storeId] ,references: [id])
    name String
    value String
    createdAt DateTime @default(now())
    updateAt DateTime @updatedAt

    @@index([storeId])
}
model Color {
    id           String     @id @default(auto()) @map("_id") @db.ObjectId
    storeId String @db.ObjectId
    store Store @relation("StoreToColor",fields: [storeId] ,references: [id])
    name String
    value String
    createdAt DateTime @default(now())
    updateAt DateTime @updatedAt

    @@index([storeId])
}